diff --git a/node_modules/react-native-actions-sheet/dist/src/hooks/useKeyboard.js b/node_modules/react-native-actions-sheet/dist/src/hooks/useKeyboard.js
index ec2da4b..672a119 100644
--- a/node_modules/react-native-actions-sheet/dist/src/hooks/useKeyboard.js
+++ b/node_modules/react-native-actions-sheet/dist/src/hooks/useKeyboard.js
@@ -15,7 +15,12 @@ export function useKeyboard(enabled) {
     var _a = useState(false), shown = _a[0], setShown = _a[1];
     var _b = useState(initialValue), coordinates = _b[0], setCoordinates = _b[1];
     var _c = useState(0), keyboardHeight = _c[0], setKeyboardHeight = _c[1];
+    var keyboardHasReachedBottom = useRef(true);
+    
     var handleKeyboardDidShow = React.useCallback(function (e) {
+        if (!keyboardHasReachedBottom.current) return;
+        keyboardHasReachedBottom.current = false;
+
         if (pauseKeyboardHandler.current)
             return;
         setCoordinates({ start: e.startCoordinates, end: e.endCoordinates });
@@ -23,6 +28,17 @@ export function useKeyboard(enabled) {
         setShown(true);
     }, []);
     var handleKeyboardDidHide = React.useCallback(function (e) {
+        keyboardHasReachedBottom.current = true;
+        setShown(false);
+        if (e) {
+            setCoordinates({ start: e.startCoordinates, end: e.endCoordinates });
+        }
+        else {
+            setCoordinates(initialValue);
+            setKeyboardHeight(0);
+        }
+    }, []);
+    var handleKeyboardWillHide = React.useCallback(function (e) {
         setShown(false);
         if (e) {
             setCoordinates({ start: e.startCoordinates, end: e.endCoordinates });
@@ -43,13 +59,15 @@ export function useKeyboard(enabled) {
                 subscriptions.push(Keyboard.addListener('keyboardDidShow', handleKeyboardDidShow));
             }
             else {
-                subscriptions.push(Keyboard.addListener('keyboardWillShow', handleKeyboardDidShow), Keyboard.addListener('keyboardWillHide', handleKeyboardDidHide));
+                subscriptions.push(Keyboard.addListener('keyboardWillShow', handleKeyboardDidShow), Keyboard.addListener('keyboardWillHide', handleKeyboardWillHide));
             }
         }
         return function () {
             subscriptions.forEach(function (subscription) { return subscription.remove(); });
         };
-    }, [enabled, handleKeyboardDidHide, handleKeyboardDidShow]);
+    }, [enabled, handleKeyboardWillHide, handleKeyboardDidHide, handleKeyboardDidShow]);
+
+
     return {
         keyboardShown: !enabled ? false : shown,
         coordinates: !enabled || !shown ? emptyCoordinates : coordinates,